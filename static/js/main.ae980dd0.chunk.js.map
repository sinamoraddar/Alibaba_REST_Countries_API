{"version":3,"sources":["components/CountryDetails/CountryDetails.module.scss","components/Dashboard/CountryList/CountryItem/CountryItem.module.scss","components/Dashboard/FilterBar/FilterBar.module.scss","components/NavBar/NavBar.module.scss","components/Dashboard/Dashboard.module.scss","components/Dashboard/CountryList/CountryList.module.scss","components/CountryDetails/BorderCountries/BorderCountries.module.scss","components/NotFoundPage/NotFound.module.scss","components/Dashboard/CountryList/Pagination/Pagination.module.scss","contexts/AppContext/index.js","_api/config.js","components/NavBar/NavBar.js","components/Dashboard/FilterBar/FilterBar.js","components/Dashboard/CountryList/CountryItem/CountryItem.js","components/Loading/Loading.js","components/Dashboard/CountryList/Pagination/Pagination.js","components/Dashboard/CountryList/CountryList.js","components/Dashboard/Dashboard.js","components/CountryDetails/BorderCountries/BorderCountries.js","_api/urls.js","_api/methods.js","components/CountryDetails/CountryDetails.js","components/NotFoundPage/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","React","createContext","baseUrl","NavBar","useContext","isUsingDarkMode","toggleDarkMode","className","styles","container","navBar","to","bold","semiBold","onClick","FilterBar","countrySearchField","regionFilter","onCountrySearchFieldChange","onRegionChange","scrollTo","useState","dropDownFilterStatus","setDropDownFilterStatus","regionFilterRef","useRef","handleClickOutside","event","current","contains","target","onSearchFieldChange","useCallback","e","value","toggleDropDown","resetRegion","stopPropagation","openDropDown","innerHTML","useEffect","document","addEventListener","removeEventListener","ref","filterBar","type","placeholder","onChange","charAt","toUpperCase","slice","arrow__Up","arrow__Down","CountryItem","capital","darkMode","name","population","region","homePage","flag","countryItem","background","style","textContainer","darkCaption","lightCaption","Numeral","format","Loading","src","process","alt","scroll","scrollIntoView","behavior","onSetCurrentPage","setCurrentPage","currentPage","pageNumberChangingStatus","paginationMiddleSectionCreator","totalPages","isActive","undefined","ellipsis","paginationOfFirstAndLastPage","Fragment","paginationForSecondAndOneBeforeLastPage","Pagination","pagination","disabled","nextPage","CountryList","filteredCountries","loading","totalCountries","setTotalPages","length","Math","ceil","countryList","error","map","country","key","countryItemCreator","Dashboard","setFilteredCountries","setCountrySearchField","setRegionFilter","title","filter","toLowerCase","includes","dashboard","fillTheRemainingHeight","BorderCountries","countryDetails","borderCountries","useMemo","borders","alpha3Code","urls","getCountryList","axios","get","CountryDetails","location","useLocation","params","useParams","setLoadingValue","setCountryDetails","fetchCountryDetails","then","response","handleCountryDetails","data","catch","console","log","finally","find","countryName","backButton","main","details","detailsContainer","mainDetails","darkDetails","lightDetails","nativeName","subregion","additionalDetails","topLevelDomain","currencies","languages","NotFound","notFoundPage","App","_isMounted","setLoading","setIsUsingDarkMode","setTotalCountries","Error","result","Provider","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae980dd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryDetails_container__4kbIn\",\"countryDetails\":\"CountryDetails_countryDetails__3OvAy\",\"backButton\":\"CountryDetails_backButton__2bfrE\",\"main\":\"CountryDetails_main__Ae9dW\",\"flag\":\"CountryDetails_flag__2NEi_\",\"details\":\"CountryDetails_details__2tlby\",\"mainDetails\":\"CountryDetails_mainDetails__RWWHL\",\"additionalDetails\":\"CountryDetails_additionalDetails___CUY_\",\"languages\":\"CountryDetails_languages__1BFgj\",\"detailsContainer\":\"CountryDetails_detailsContainer__31U8B\",\"darkDetails\":\"CountryDetails_darkDetails__1-TLe\",\"lightDetails\":\"CountryDetails_lightDetails__3tyh-\",\"error\":\"CountryDetails_error__gOoVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countryItem\":\"CountryItem_countryItem__15hri\",\"background\":\"CountryItem_background__3X5uK\",\"textContainer\":\"CountryItem_textContainer__o1XCm\",\"darkCaption\":\"CountryItem_darkCaption__F6rbz\",\"lightCaption\":\"CountryItem_lightCaption__3dKuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBar_container__2qj6x\",\"filterBar\":\"FilterBar_filterBar__EgPhd\",\"regionFilter\":\"FilterBar_regionFilter__3lgas\",\"rotate\":\"FilterBar_rotate__TsZfb\",\"dropDown\":\"FilterBar_dropDown__2WiMm\",\"arrow__Up\":\"FilterBar_arrow__Up__3uNbf\",\"arrow__Down\":\"FilterBar_arrow__Down__2rhS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavBar_container__WwQ6n\",\"bold\":\"NavBar_bold__1bIV6\",\"semiBold\":\"NavBar_semiBold__Ob9vx\",\"navBar\":\"NavBar_navBar__169o_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__205D7\",\"dashboard\":\"Dashboard_dashboard__3-njO\",\"fillTheRemainingHeight\":\"Dashboard_fillTheRemainingHeight__3M5Sd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countryList\":\"CountryList_countryList__2N0w8\",\"error\":\"CountryList_error__3D9qO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderCountries\":\"BorderCountries_borderCountries__TXNOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFoundPage\":\"NotFound_notFoundPage__1J0-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__3Siz-\",\"fa-ellipsis-h\":\"Pagination_fa-ellipsis-h__2XJDu\",\"dark\":\"Pagination_dark__3ch29\",\"light\":\"Pagination_light__2HVlT\",\"darkElements\":\"Pagination_darkElements__2lE83\",\"lightElements\":\"Pagination_lightElements__1mCbV\",\"root\":\"Pagination_root__3CR49\",\"loadingGif\":\"Pagination_loadingGif__1jKSR\",\"pagination\":\"Pagination_pagination__2oVRO\",\"nextPage\":\"Pagination_nextPage__pDh0V\",\"isActive\":\"Pagination_isActive__3TKoH\",\"ellipsis\":\"Pagination_ellipsis__2xbPc\"};","import React from \"react\";\n\nexport const AppContext = React.createContext({});\n","export const baseUrl =\n  process.env.NODE_ENV === \"development\" ? \"/\" : \"/Alibaba_REST_Countries_API/\";\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n// styles\nimport styles from \"./NavBar.module.scss\";\n// context\nimport { AppContext } from \"../../contexts/AppContext\";\n// api\nimport { baseUrl } from \"../../_api/config\";\n\nconst NavBar = () => {\n  const { isUsingDarkMode, toggleDarkMode } = useContext(AppContext);\n\n  return (\n    <>\n      <nav\n        className={`${styles.container} ${styles.navBar} ${\n          isUsingDarkMode ? `dark darkElements` : `light lightElements`\n        }`}\n      >\n        <Link to={baseUrl} className={styles.bold}>\n          Where in the world?\n        </Link>\n        <button\n          className={`${styles.semiBold} ${\n            isUsingDarkMode ? `dark darkElements` : `light lightElements`\n          }`}\n          onClick={toggleDarkMode}\n        >\n          {isUsingDarkMode ? (\n            <>\n              <i className=\"fas fa-moon\" /> Dark Mode\n            </>\n          ) : (\n            <>\n              <i className=\"far fa-moon\" /> Light Mode\n            </>\n          )}\n        </button>\n      </nav>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  useCallback,\n} from \"react\";\nimport styles from \"./FilterBar.module.scss\";\nimport { AppContext } from \"../../../contexts/AppContext\";\n\nconst FilterBar = ({\n  countrySearchField,\n  regionFilter,\n  onCountrySearchFieldChange,\n  onRegionChange,\n  scrollTo,\n}) => {\n  // context\n  const { isUsingDarkMode } = useContext(AppContext);\n\n  // state\n  const [dropDownFilterStatus, setDropDownFilterStatus] = useState(false);\n\n  // ref\n  const regionFilterRef = useRef(null);\n\n  // callbacks\n  const handleClickOutside = (event) => {\n    if (\n      regionFilterRef.current &&\n      !regionFilterRef.current.contains(event.target)\n    ) {\n      setDropDownFilterStatus(false);\n    }\n  };\n\n  const onSearchFieldChange = useCallback(\n    (e) => onCountrySearchFieldChange(e.target.value),\n    []\n  );\n\n  const toggleDropDown = useCallback(\n    () =>\n      setDropDownFilterStatus((dropDownFilterStatus) => !dropDownFilterStatus),\n    []\n  );\n\n  const resetRegion = useCallback((e) => {\n    e.stopPropagation();\n    onRegionChange(\"\");\n  }, []);\n\n  const openDropDown = useCallback(\n    (e) => {\n      onRegionChange(e.target.innerHTML);\n      toggleDropDown();\n    },\n\n    []\n  );\n\n  // life cycle hooks\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  return (\n    <div\n      ref={scrollTo}\n      className={`${styles.filterBar} ${styles.container} ${\n        isUsingDarkMode ? `dark` : `light`\n      }`}\n    >\n      <span className={isUsingDarkMode ? `darkElements` : `lightElements`}>\n        <i className=\"fas fa-search\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search for a country...\"\n          onChange={onSearchFieldChange}\n          value={countrySearchField}\n        />\n      </span>\n      <div className={styles.regionFilter} ref={regionFilterRef}>\n        <div\n          className={isUsingDarkMode ? `darkElements` : `lightElements`}\n          onClick={toggleDropDown}\n        >\n          <span>\n            {regionFilter && (\n              <button\n                className={isUsingDarkMode ? `darkElements` : `lightElements`}\n                onClick={resetRegion}\n              >\n                <i className=\"fas fa-times\" />\n              </button>\n            )}\n            {regionFilter\n              ? regionFilter.charAt(0).toUpperCase() + regionFilter.slice(1)\n              : \"Filter by Region\"}\n          </span>\n          <i\n            className={`fas fa-arrow-left ${\n              dropDownFilterStatus ? styles.arrow__Up : styles.arrow__Down\n            }`}\n          />\n        </div>\n        {dropDownFilterStatus && (\n          <ul\n            className={isUsingDarkMode ? `darkElements` : `lightElements`}\n            onClick={openDropDown}\n          >\n            <li>africa</li>\n            <li>americas</li>\n            <li>asia</li>\n            <li>europe</li>\n            <li>oceania</li>\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FilterBar;\n","import React from \"react\";\nimport Numeral from \"numeral\";\nimport { Link } from \"react-router-dom\";\n// styles\nimport styles from \"./CountryItem.module.scss\";\n\nconst CountryItem = ({\n  capital,\n  darkMode,\n  name,\n  population,\n  region,\n  homePage,\n  flag,\n}) => {\n  return (\n    <Link to={`${homePage}countries/${name}`}>\n      <figure\n        className={`${styles.countryItem} ${\n          darkMode ? `dark darkElements` : `light lightElements`\n        }`}\n      >\n        <div\n          className={styles.background}\n          style={{\n            background: `url(${flag})`,\n          }}\n        />\n        <figcaption className={styles.textContainer}>\n          <h2>{name}</h2>\n          <div>\n            Population :\n            <span\n              className={darkMode ? styles.darkCaption : styles.lightCaption}\n            >\n              {Numeral(population).format(0, 0)}\n            </span>\n          </div>\n          <div>\n            Region :\n            <span\n              className={darkMode ? styles.darkCaption : styles.lightCaption}\n            >\n              {region}\n            </span>\n          </div>\n          <div>\n            Capital :\n            <span\n              className={darkMode ? styles.darkCaption : styles.lightCaption}\n            >\n              {capital || \"-\"}\n            </span>\n          </div>\n        </figcaption>\n      </figure>\n    </Link>\n  );\n};\n\nexport default CountryItem;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../contexts/AppContext\";\n\nconst Loading = () => {\n  const { isUsingDarkMode } = useContext(AppContext);\n\n  return (\n    <img\n      className=\"loadingGif\"\n      src={`${process.env.PUBLIC_URL}/assets/pics/loading--${\n        isUsingDarkMode ? `dark` : `light`\n      }.svg`}\n      alt=\"loading\"\n    />\n  );\n};\nexport default Loading;\n","import React, { useContext } from \"react\";\n// styles\nimport styles from \"./Pagination.module.scss\";\n// context\nimport { AppContext } from \"../../../../contexts/AppContext\";\n\nconst scroll = (scrollTo) => {\n  scrollTo.current.scrollIntoView({ behavior: \"smooth\" });\n};\n\n// constants\nconst INCREMENT = \"INCREMENT\";\nconst DECREMENT = \"DECREMENT\";\n\nconst onSetCurrentPage = (\n  setCurrentPage,\n  currentPage,\n  pageNumberChangingStatus,\n  scrollTo\n) => {\n  switch (pageNumberChangingStatus) {\n    case INCREMENT: {\n      scroll(scrollTo);\n      setCurrentPage(currentPage + 1);\n      break;\n    }\n    case DECREMENT: {\n      scroll(scrollTo);\n      setCurrentPage(currentPage - 1);\n      break;\n    }\n    default:\n      break;\n  }\n};\n\n// supplementary components\nconst paginationOfFirstAndLastPage = (\n  currentPage,\n  totalPages,\n  setCurrentPage,\n  scrollTo\n) => {\n  return (\n    <>\n      <button\n        onClick={\n          currentPage + 1 === totalPages\n            ? () => {\n                setCurrentPage(0);\n                scroll(scrollTo);\n              }\n            : undefined\n        }\n        className={currentPage === 0 ? styles.isActive : undefined}\n      >\n        1\n      </button>\n      <button className={styles.ellipsis}>\n        <i className=\"fas fa-ellipsis-h\" />\n      </button>\n      <button\n        onClick={\n          currentPage + 1 === 1\n            ? () => {\n                setCurrentPage(totalPages - 1);\n                scroll(scrollTo);\n              }\n            : undefined\n        }\n        className={currentPage + 1 === totalPages ? styles.isActive : undefined}\n      >\n        {totalPages}\n      </button>\n    </>\n  );\n};\n\nconst paginationForSecondAndOneBeforeLastPage = (\n  currentPage,\n  totalPages,\n  setCurrentPage,\n  scrollTo\n) => {\n  return (\n    <>\n      <button\n        onClick={() => {\n          setCurrentPage(0);\n          scroll(scrollTo);\n        }}\n      >\n        1\n      </button>\n      {currentPage + 1 === 2 ? (\n        <>\n          <button className={styles.isActive}>2</button>\n          <button className={styles.ellipsis}>\n            <i className=\"fas fa-ellipsis-h\" />\n          </button>\n        </>\n      ) : (\n        <React.Fragment>\n          <button className={styles.ellipsis}>\n            <i className=\"fas fa-ellipsis-h\" />\n          </button>\n          <button className={styles.isActive}>{totalPages - 1}</button>\n        </React.Fragment>\n      )}\n      <button\n        onClick={() => {\n          setCurrentPage(totalPages - 1);\n          scroll(scrollTo);\n        }}\n      >\n        {totalPages}\n      </button>\n    </>\n  );\n};\n\nconst paginationMiddleSectionCreator = (\n  currentPage,\n  totalPages,\n  setCurrentPage,\n  scrollTo\n) => {\n  if (totalPages === 1) {\n    return <button className={styles.isActive}>1</button>;\n  }\n  switch (currentPage + 1) {\n    case 1:\n    case totalPages: {\n      return paginationOfFirstAndLastPage(\n        currentPage,\n        totalPages,\n        setCurrentPage,\n        scrollTo\n      );\n    }\n    case 2:\n    case totalPages - 1: {\n      return paginationForSecondAndOneBeforeLastPage(\n        currentPage,\n        totalPages,\n        setCurrentPage,\n        scrollTo\n      );\n    }\n    default: {\n      return (\n        <React.Fragment>\n          <button\n            onClick={() => {\n              setCurrentPage(0);\n              scroll(scrollTo);\n            }}\n          >\n            1\n          </button>\n          <button className={styles.ellipsis}>\n            <i className=\"fas fa-ellipsis-h\" />\n          </button>\n          <button className={styles.isActive}>{currentPage + 1}</button>\n          <button className={styles.ellipsis}>\n            <i className=\"fas fa-ellipsis-h\" />\n          </button>\n          <button\n            onClick={() => {\n              setCurrentPage(totalPages - 1);\n              scroll(scrollTo);\n            }}\n          >\n            {totalPages}\n          </button>\n        </React.Fragment>\n      );\n    }\n  }\n};\n\n// main component\nconst Pagination = ({ currentPage, setCurrentPage, totalPages, scrollTo }) => {\n  // context\n  const { isUsingDarkMode } = useContext(AppContext);\n\n  return (\n    <div\n      className={`${styles.pagination} ${isUsingDarkMode ? `dark ` : `light `}`}\n    >\n      <button\n        onClick={() => {\n          onSetCurrentPage(setCurrentPage, currentPage, DECREMENT, scrollTo);\n        }}\n        disabled={currentPage === 0}\n      >\n        <i className=\"fas fa-arrow-left\" />\n      </button>\n      {paginationMiddleSectionCreator(\n        currentPage,\n        totalPages,\n        setCurrentPage,\n        scrollTo\n      )}\n      <button\n        className={styles.nextPage}\n        onClick={() => {\n          onSetCurrentPage(setCurrentPage, currentPage, INCREMENT, scrollTo);\n        }}\n        disabled={currentPage + 1 === totalPages}\n      >\n        <i className=\"fas fa-arrow-left\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect, useContext } from \"react\";\n// components\nimport CountryItem from \"./CountryItem/CountryItem\";\nimport Loading from \"../../Loading/Loading\";\nimport Pagination from \"./Pagination/Pagination\";\n// styles\nimport styles from \"./CountryList.module.scss\";\n// context\nimport { AppContext } from \"../../../contexts/AppContext\";\n// api\nimport { baseUrl } from \"../../../_api/config\";\n\n// supplementary components\nconst countryItemCreator = (\n  filteredCountries,\n  currentPage,\n  darkMode,\n  homePage\n) =>\n  filteredCountries.length > 0 &&\n  filteredCountries\n    .slice(currentPage * 8, currentPage * 8 + 8)\n    .map((country) => (\n      <CountryItem\n        key={country.name}\n        {...country}\n        darkMode={darkMode}\n        homePage={homePage}\n      />\n    ));\n\n// main component\nconst CountryList = ({\n  filteredCountries,\n  scrollTo,\n  regionFilter,\n  countrySearchField,\n}) => {\n  // context\n  const { loading, isUsingDarkMode, totalCountries } = useContext(AppContext);\n\n  // state\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n\n  // life cycle hooks\n  useEffect(() => {\n    setTotalPages(\n      filteredCountries?.length > 8\n        ? Math.ceil(filteredCountries.length / 8)\n        : 1\n    );\n  }, [filteredCountries]);\n\n  useEffect(() => {\n    setCurrentPage(0);\n  }, [filteredCountries]);\n\n  return (\n    <section className={styles.countryList}>\n      {loading ? (\n        <Loading />\n      ) : (regionFilter || countrySearchField) &&\n        filteredCountries?.length === 0 ? (\n        <p className={styles.error}>\n          Oops, we have no idea what you're talking about\n          <br />\n          Search for something else\n        </p>\n      ) : (\n        <React.Fragment>\n          <div>\n            {countryItemCreator(\n              !regionFilter && !countrySearchField\n                ? totalCountries\n                : filteredCountries,\n              currentPage,\n              isUsingDarkMode,\n              baseUrl\n            )}\n          </div>\n          <Pagination\n            currentPage={currentPage}\n            scrollTo={scrollTo}\n            setCurrentPage={setCurrentPage}\n            totalPages={totalPages}\n          />\n        </React.Fragment>\n      )}\n    </section>\n  );\n};\nexport default CountryList;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n// components\nimport NavBar from \"../NavBar/NavBar\";\nimport FilterBar from \"./FilterBar/FilterBar\";\nimport CountryList from \"./CountryList/CountryList\";\n// context\nimport { AppContext } from \"../../contexts/AppContext\";\n// styles\nimport styles from \"./Dashboard.module.scss\";\n\nconst Dashboard = () => {\n  // context\n  const { isUsingDarkMode, totalCountries } = useContext(AppContext);\n\n  // ref\n  const scrollTo = useRef(null);\n\n  // state\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [countrySearchField, setCountrySearchField] = useState(\"\");\n  const [regionFilter, setRegionFilter] = useState(\"\");\n\n  // callbacks\n  const onCountrySearchFieldChange = (countrySearchField) => {\n    setCountrySearchField(countrySearchField);\n  };\n\n  const onRegionChange = (regionFilter) => {\n    setRegionFilter(regionFilter);\n  };\n\n  const updateFilteredCountries = () => {\n    setFilteredCountries(() => {\n      let filteredCountries = totalCountries.filter((country) => {\n        return country.name\n          .toLowerCase()\n          .includes(countrySearchField.toLowerCase());\n      });\n\n      if (regionFilter) {\n        filteredCountries = filteredCountries.filter((country) => {\n          return country.region.toLowerCase() === regionFilter.toLowerCase();\n        });\n      }\n\n      return filteredCountries;\n    });\n  };\n\n  // life cycle hooks\n  useEffect(() => {\n    //update the document's title right after the component is mounted\n    document.title = \"Where in the World ?\";\n  }, []);\n\n  useEffect(() => {\n    updateFilteredCountries();\n  }, [regionFilter, countrySearchField, totalCountries]);\n\n  return (\n    <>\n      <header className={styles.dashboard}>\n        <NavBar />\n        <FilterBar\n          {...{\n            scrollTo,\n            onRegionChange,\n            onCountrySearchFieldChange,\n            regionFilter,\n            countrySearchField,\n          }}\n        />\n      </header>\n      <main\n        className={`${styles.container} ${styles.dashboard} ${\n          styles.fillTheRemainingHeight\n        } ${isUsingDarkMode ? `dark` : `light`}`}\n      >\n        <CountryList\n          {...{ scrollTo, filteredCountries, regionFilter, countrySearchField }}\n        />\n      </main>\n    </>\n  );\n};\nexport default Dashboard;\n","import React, { useContext, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\n// styles\nimport styles from \"./BorderCountries.module.scss\";\n// context\nimport { AppContext } from \"../../../contexts/AppContext\";\n// api\nimport { baseUrl } from \"../../../_api/config\";\n\nconst BorderCountries = ({ countryDetails }) => {\n  // context\n  const { totalCountries, isUsingDarkMode } = useContext(AppContext);\n\n  // variables\n  const borderCountries = useMemo(\n    () =>\n      totalCountries\n        .filter((country) => {\n          return (\n            countryDetails &&\n            countryDetails.borders &&\n            countryDetails.borders.includes(country.alpha3Code)\n          );\n        })\n        .map((country) => (\n          <Link\n            to={`${baseUrl}countries/${country.name}`}\n            key={country.name}\n            className={\n              isUsingDarkMode ? `dark darkElements` : `light lightElements`\n            }\n          >\n            {country.name}\n          </Link>\n        )),\n    [countryDetails, totalCountries, isUsingDarkMode]\n  );\n\n  return (\n    <div\n      className={`${styles.borderCountries} ${\n        isUsingDarkMode ? \"dark\" : \"light\"\n      }`}\n    >\n      <h3>Border Countries: </h3>\n      <div> {borderCountries.length !== 0 ? borderCountries : \"-\"} </div>\n    </div>\n  );\n};\n\nexport default BorderCountries;\n","export const urls = {\n  GET_ALL_COUNTRIES: \"https://restcountries.com/v2/all\",\n};\n","import axios from \"axios\";\nimport { urls } from \"./urls\";\n\nexport const getCountryList = () => axios.get(urls.GET_ALL_COUNTRIES);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Numeral from \"numeral\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\n// components\nimport NavBar from \"../NavBar/NavBar\";\nimport Loading from \"../Loading/Loading\";\nimport BorderCountries from \"./BorderCountries/BorderCountries\";\n// context\nimport { AppContext } from \"../../contexts/AppContext\";\n// api\nimport { baseUrl } from \"../../_api/config\";\nimport { getCountryList } from \"../../_api/methods\";\n// styles\nimport styles from \"./CountryDetails.module.scss\";\n\nconst CountryDetails = () => {\n  // third party hooks\n  const location = useLocation();\n  const params = useParams();\n\n  // context\n  const { loading, setLoadingValue, isUsingDarkMode, totalCountries } =\n    useContext(AppContext);\n\n  // state\n  const [countryDetails, setCountryDetails] = useState(null);\n\n  // callbacks\n  const fetchCountryDetails = () => {\n    setLoadingValue(true);\n    getCountryList()\n      .then((response) => {\n        handleCountryDetails(response.data);\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {\n        setLoadingValue(false);\n      });\n  };\n\n  const handleCountryDetails = (totalCountries) => {\n    setCountryDetails(\n      totalCountries.find((country) => country.name === params.countryName)\n    );\n  };\n\n  // life cycle hooks\n  useEffect(() => {\n    document.title = params.countryName;\n  }, [params]);\n\n  useEffect(() => {\n    if (totalCountries?.length > 0) {\n      handleCountryDetails(totalCountries);\n    } else {\n      fetchCountryDetails();\n    }\n  }, [location.key, totalCountries]);\n\n  return (\n    <>\n      <header\n        className={`${styles.countryDetails} ${\n          isUsingDarkMode ? `dark` : `light`\n        }`}\n      >\n        <NavBar />\n        <Link\n          to={baseUrl}\n          className={`${styles.backButton} ${\n            isUsingDarkMode ? \"dark darkElements\" : \"light lightElements\"\n          }`}\n        >\n          <i className=\"fas fa-arrow-left\" />\n          Back\n        </Link>\n      </header>\n      <main\n        className={`${styles.countryDetails} ${styles.main}  ${\n          isUsingDarkMode ? `dark` : `light`\n        }`}\n      >\n        {loading || countryDetails === null ? (\n          <Loading />\n        ) : countryDetails === undefined ? (\n          <p className={styles.error}>\n            Sorry we we have no idea about the thing you're looking for\n          </p>\n        ) : (\n          <>\n            <div className={styles.flag}>\n              <img\n                src={countryDetails?.flag}\n                alt={`${countryDetails.name} flag`}\n              />\n            </div>\n            <div className={styles.details}>\n              <h1> {params.countryName}</h1>\n              <div className={styles.detailsContainer}>\n                <div className={styles.mainDetails}>\n                  <p>\n                    Native Name:{\" \"}\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {countryDetails.nativeName}{\" \"}\n                    </span>\n                  </p>\n                  <p>\n                    Population:{\" \"}\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {Numeral(countryDetails.population).format(0, 0)}\n                    </span>\n                  </p>\n                  <p>\n                    Region:{\" \"}\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {countryDetails.region}\n                    </span>\n                  </p>\n                  <p>\n                    Sub Region:{\" \"}\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {\" \"}\n                      {countryDetails.subregion}\n                    </span>\n                  </p>\n                  <p>\n                    Capital:{\" \"}\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {\" \"}\n                      {countryDetails.capital || \"-\"}\n                    </span>\n                  </p>\n                </div>\n                <div className={styles.additionalDetails}>\n                  <p>\n                    Top Level Domain:{\" \"}\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {countryDetails.topLevelDomain}\n                    </span>\n                  </p>\n                  <p>\n                    Currencies:\n                    <span\n                      className={\n                        isUsingDarkMode\n                          ? styles.darkDetails\n                          : styles.lightDetails\n                      }\n                    >\n                      {\" \"}\n                      {countryDetails?.currencies\n                        ? countryDetails?.currencies[0]?.name\n                        : \"-\"}\n                    </span>\n                  </p>\n                  <p className={styles.languages}>\n                    Languages :\n                    {countryDetails.languages.map(({ name }) => (\n                      <span\n                        className={\n                          isUsingDarkMode\n                            ? styles.darkDetails\n                            : styles.lightDetails\n                        }\n                        key={name}\n                      >\n                        {name}\n                      </span>\n                    ))}\n                  </p>\n                </div>\n              </div>\n              <BorderCountries {...{ countryDetails, fetchCountryDetails }} />\n            </div>\n          </>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default CountryDetails;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n// api\nimport { baseUrl } from \"../../_api/config\";\n// context\nimport { AppContext } from \"../../contexts/AppContext\";\n// styles\nimport styles from \"./NotFound.module.scss\";\n\nconst NotFound = () => {\n  // context\n  const { isUsingDarkMode } = useContext(AppContext);\n\n  return (\n    <main\n      className={`${styles.notFoundPage} ${isUsingDarkMode ? `dark` : `light`}`}\n    >\n      Sorry, nothing was found !\n      <Link\n        to={baseUrl}\n        className={isUsingDarkMode ? \"darkElements\" : \"lightElements\"}\n      >\n        Go Back Home\n      </Link>\n    </main>\n  );\n};\n\nexport default NotFound;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n// components\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport CountryDetails from \"./CountryDetails/CountryDetails\";\nimport NotFound from \"./NotFoundPage/NotFound\";\n// context\nimport { AppContext } from \"../contexts/AppContext\";\n// api\nimport { baseUrl } from \"../_api/config\";\nimport { getCountryList } from \"../_api/methods\";\n// styles\nimport \"./App.scss\";\n\nconst App = () => {\n  // refs\n  const _isMounted = useRef(true);\n\n  // state\n  const [loading, setLoading] = useState(true);\n  const [isUsingDarkMode, setIsUsingDarkMode] = useState(true);\n  const [totalCountries, setTotalCountries] = useState([]);\n\n  // callbacks\n  const toggleDarkMode = useCallback(() => {\n    setIsUsingDarkMode((isUsingDarkMode) => !isUsingDarkMode);\n  }, []);\n\n  const setLoadingValue = useCallback((loading) => {\n    if (typeof loading === \"boolean\") {\n      setLoading(loading);\n    } else throw new Error(\"loading value should be a boolean\");\n  }, []);\n\n  // life cycle hooks\n  useEffect(() => {\n    setLoadingValue(true);\n    getCountryList()\n      .then((result) => {\n        if (_isMounted.current) {\n          setTotalCountries(result.data);\n        }\n      })\n      .catch(console.error)\n      .finally(() => {\n        setLoadingValue(false);\n      });\n\n    return () => {\n      _isMounted.current = false;\n    };\n  }, []);\n\n  return (\n    <AppContext.Provider\n      value={{\n        loading,\n        setLoadingValue,\n        toggleDarkMode,\n        isUsingDarkMode,\n        totalCountries,\n      }}\n    >\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={baseUrl}>\n            <Dashboard />\n          </Route>\n          <Route exact path={`${baseUrl}countries/:countryName`}>\n            <CountryDetails />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}